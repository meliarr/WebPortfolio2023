---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import ImageLightbox from "../../components/ImageLightbox.jsx";
import ArtGallery from "../../components/ArtGallery.astro";

interface Props {
  entry: CollectionEntry<"work">;
}

export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout
  title={`${entry.data.title} | ${entry.data.type} by Melissa Arroyo`}
  description={entry.data.description}
>
  <div class="stack">
    <div class="stack">
      <main
      class="px-5 lg:container border border-[3px] border-[#efefef] bg-[#fff] py-[80px] lg:mb-[60px]"
      >
        <header>
          <div class="wrapper stack gap-2">
            <a class="back-link pb-[20px]" href="/work/"
              ><Icon icon="arrow-left" /> Work</a
            >
            <Hero title={entry.data.title} align="start">
              <div class="details">
                <ul class="TechStack">
                  {
                    entry.data.tags.map(item => (
                      <li>{item}</li>
                    ))
                  }
                </ul>
                <p class="description">{entry.data.description}</p>
              </div>
            </Hero>
          </div>
        </header>
        <div class="ProjectDetailContainer">
          <div class="flex flex-col lg:flex-row lg:items-center gap-[3rem]">
            <div class="lg:w-5/12">
              {
                entry.data.img &&
                <ImageLightbox
                  imgSrc={entry.data.img}
                  imgAlt={entry.data.title}
                  client:load
                  aspectRatio={entry.data.type === 'illustrations' ? 'aspect-square' : 'aspect-[6/4] lg:aspect-[9/16]'}
                />
              }
            </div>
            <div class="content lg:w-7/12 px-1 md:px-10 lg:px-0">
              <Content />
            </div>
          </div>
          {
            entry.data.featuredImgs &&
            <ArtGallery featuredImgs={entry.data.featuredImgs} />
          }
        </div>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 2.5rem;
  }
  .wrapper {
    padding-top: 2rem;
    @media (min-width: 992px) {
      padding-top: 0;
    }
  }
  .back-link {
    display: none;
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: flex-start;
  }

.TechStack {
    list-style: none;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    font-size: 25px;
    letter-spacing: .25px;
    font-family: theme('fontFamily.condensed');
    text-transform: uppercase;
    font-weight: 600;
    color: theme('colors.body');
    margin: 20px auto;
    @media (min-width: 992px) {
      margin: 0;
    }
  }
  .TechStack li {
    &::after {
      content: '';
      margin: 0 10px;
      border-left: 2px solid theme('colors.mainPurple');
      opacity: .25;
    }
  }
  .TechStack li:last-child {
    &::after {
      border: none;
    }
  }
  .description {
    font-size: var(--text-lg);
    max-width: 54ch;
    font-family: theme("fontFamily.sans");
    font-weight: 100;
    margin: 0 auto;
    @media (min-width: 992px) {
      margin: 0;
    }
  }
  .ProjectDetailContainer {
    display: flex;
    flex-direction: column;
    @media(min-width: 992px) {
      padding: 3rem 5rem 0 5rem;
      border-top: 3px solid #efefef;
    }
  }
  .content {
    display: flex;
    flex-direction: column;
  }
  .intro-paragraph {
    color: red;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {
    border: 1px solid theme('colors.neutral');
  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--gray-0);
  }

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (min-width: 50em) {
    .back-link {
      display: flex;
      align-self: flex-start;
      align-items: center;
      gap: 10px;
      font-family: theme("fontFamily.serif");
      color: theme("colors.mainPurple");
    }

    .details {
      flex-direction: row;
      gap: 2.5rem;
    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }
  }
</style>
